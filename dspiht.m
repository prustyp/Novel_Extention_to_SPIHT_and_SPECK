function btrcf=dspiht(op,btr,ftype)
% re=dspiht(op,btr,ftype)
%    this function takes as input an encoded bit stream "OP", bit rate 
%    "BTR" at which image is to be decoded, FTYPE used by encoder then  
%    using SPIHT decoding algorithm it decodes the image and returns it
%    .....reconstructed image is returned in "re"
%      
%  an example: >> x=dspiht(y,1,'9.7');
%  
%  OP:  this should be the output bitstream generated by the SPIHT encoder.
%  FTYPE:this indicates the type of wavelet used for decomposition(encoder) 
%       there are a large number of filter available for decomposition. one 
%       can specify the filter type by providing their name as input
%       argument .. some of the valid FTYPE that can be used in the
%       programme are listed below..
%       'haar'
%       'db1', 'db2', 'db3', 'db4', 'db5', 'db6', 'db7', 'db8'
%       Cohen-Daubechies-Feauveau wavelets:
%       'cdf1.1','cdf1.3','cdf1.5' - 'cdf2.2','cdf2.4','cdf2.6'
%       'cdf3.1','cdf3.3','cdf3.5' - 'cdf4.2','cdf4.4','cdf4.6'
%       'cdf5.1','cdf5.3','cdf5.5' - 'cdf6.2','cdf6.4','cdf6.6'
%       'bs3'  : identical to 'cdf4.2'
%       '9.7'  : identical to 'bior4.4'  
% BTR: it represents the bitrate at which image is to be decoded ..
%       default value of BTR is 1.000 bpp..

%%                ...... error check in input.....
tic;
error(nargchk(1,3,nargin));
if nargin ==1
     ftype ='9.7';  btr=1.0;     %..default "btr" is 1 bpp  and default wavelet is haar....
elseif nargin ==2
        ftype ='9.7';
end


fprintf('error checking in input -------------------------------------------\ndone ! \n\n');

totalbit= btr*262144;

%%                                  INITIALIZATION STEP
  %                  ........now starts the main spiht algorithm.......
                          
   fprintf('decoding with SPIHT started---------------------------------------- \n')

    % data structures DECLARATION ........COUNTER INITIALISATIONS..... 
    btrcf=zeros(512,512);
    sp=zeros(300000,2);    nsp=1;  % List of Significant Pixels .... nsp is the counter for lsp...
    ip=zeros(300000,2);    nip=1; % List of Insignificant Pixels ... nip is the counter for lip..
    is=zeros(300000,3);    nis=1; % List of Insignificant Sets .....nis is the counter for lis...
    tbit=1; % this data structure stores the generated output stream..
                                   % this is the for counting the number of encoded bits..... 
     
     ld=op(tbit); tbit=tbit+1;                              
     BIT=op(tbit);  tbit=tbit+1; % input N....
     N=BIT;
     %...................................................initialization....
     %.....................................................................
     n=2^(9-ld);
     if n==1
        % insert the four pixel into lip....(list of insignificant pixel)...
        ip(nip,:)=[1,1];  nip=nip+1;
        ip(nip,:)=[1,2];  nip=nip+1;
        ip(nip,:)=[2,1];  nip=nip+1;
        ip(nip,:)=[2,2];  nip=nip+1;
        % insert the three pixel into lis...(list of insignificant set)....
        is(nis,:)=[1,2,1];  nis=nis+1;
        is(nis,:)=[2,1,1];  nis=nis+1;
        is(nis,:)=[2,2,1];  nis=nis+1;
         
     else
         
     for k=1:n
         for l=1:n
             is(nis,:)=[k,l,1]; nis=nis+1;
             ip(nip,:)=[k,l]; nip=nip+1;
         end
     end
     end
     %....................................................................
     
  tok=toc;
  tin=tok;
  tip=0;
  tis=0;
  tir=0;
%%

    while(N>=0 && tbit<=totalbit)
         
         last=0;  %... to count the significant pixel found in present bit plane
      T=2^N;                  ..................... SORTING PASS.............
     %..............                FOR EACH ENTRY IN LIP....... 
     tic;
     count=1;
     while (count<nip)&& (tbit<=totalbit)
                
        k=ip(count,1);  l=ip(count,2);
        
        if(k~=0 && l~=0)  %... if there is some valid cordinate position ... 
            %..find significance..
            s=op(tbit);tbit=tbit+1; %output s.......
            %if found significant then move to LSP... and output the sign... 
            if(s==1)
                % insert (k,l) into lsp 
                sp(nsp,:)=[k,l];  nsp=nsp+1;last=last+1;
                btrcf(k,l)=2^N;
                % output the sign of value...
                bt=op(tbit);tbit=tbit+1;
                if(bt==1)
                    btrcf(k,l)=-btrcf(k,l);
                end
                % delete it from lip... 
                ip(count,:)=[0,0];
            end
        end
        count=count+1;
     end
     tok=toc;
     tip=tip+tok;
     
    %                       FOR EACH  entry (i,j)in the list... LIS.......
     
     tic;
     count=1;
     while(count<nis)&& (tbit<=totalbit)
         
         k=is(count,1);  l=is(count,2); type=is(count,3);                        
                
         %                 .......  FOR ENTRY OF Type "A" 
         if ((type==1)&&(k~=0)&&(l~=0))
         
            %....find the significance of D(k,l) and output it.....
             
             s=op(tbit);tbit=tbit+1;
             if (tbit>totalbit)
                 break;
             end
             %          ...............if D(k,l)is significance.....
             if(s==1)
                 % for each ofspring of (k,l).. do some work...
                 k=is(count,1);  l=is(count,2); 
                 
                 if(2*k-1<=512 && 2*l-1<=512)&& (k>2^(9-ld)||l>2^(9-ld)) %... outside lowest subband..
                     
                     
                     s=op(tbit); tbit=tbit+1;% ... output the sig....
                     if(s==1)%... if significant....
                         sp(nsp,:)= [2*k-1,2*l-1];nsp=nsp+1; last=last+1; %...put 2k-1,2l-1 in lsp...
                         btrcf(2*k-1,2*l-1)=2^N;
                         bt=op(tbit);tbit=tbit+1;  %...take sign
                         if bt==1
                             btrcf(2*k-1,2*l-1)=-btrcf(2*k-1,2*l-1);
                         end

                     else %.... if insignificant....
                         ip(nip,:)= [2*k-1,2*l-1];  nip=nip+1;%...put 2k-1,2l-1 in lip... 
                     end


                     
                     if (tbit>totalbit)
                         break;
                     end

                     s=op(tbit); tbit=tbit+1;% ... output the sig....
                     if(s==1)%... if significant....
                         sp(nsp,:)= [2*k-1,2*l];  nsp=nsp+1; last=last+1;%...put 2k-1,2l in lsp...
                         btrcf(2*k-1,2*l)=2^N;
                         bt=op(tbit);tbit=tbit+1;  %...take sign
                         if bt==1
                             btrcf(2*k-1,2*l)=-btrcf(2*k-1,2*l);
                         end

                     else %.... if insignificant....
                         ip(nip,:)= [2*k-1,2*l];  nip=nip+1;%...put 2k-1,2l in lip...   
                     end
                  
                     
                     
                     if (tbit>totalbit)
                         break;
                     end
                     s=op(tbit); tbit=tbit+1;% ... output the sig....
                     if(s==1)%... if significant....
                         sp(nsp,:)= [2*k,2*l-1]; nsp=nsp+1; last=last+1;%...put 2k,2l-1 in lsp...
                         btrcf(2*k,2*l-1)=2^N;
                         bt=op(tbit);tbit=tbit+1;  %...take sign
                         if bt==1
                             btrcf(2*k,2*l-1)=-btrcf(2*k,2*l-1);
                         end

                     else %.... if insignificant....
                         ip(nip,:)= [2*k,2*l-1]; nip=nip+1;%...put 2k,2l-1 in lip...   
                     end



                     if (tbit>totalbit)
                         break;
                     end
                     s=op(tbit); tbit=tbit+1;% ... output the sig....
                     if(s==1)%... if significant....
                         sp(nsp,:)= [2*k,2*l]; nsp=nsp+1; last=last+1;%...put 2k,2l in lsp...
                         btrcf(2*k,2*l)=2^N;
                         bt=op(tbit);tbit=tbit+1;  %...take sign
                         if bt==1
                             btrcf(2*k,2*l)=-btrcf(2*k,2*l);
                         end

                     else %.... if insignificant....
                         ip(nip,:)= [2*k,2*l];  nip=nip+1;%...put 2k,2l in lip...   
                     end
                 elseif (2*k-1<=512 && 2*l-1<=512)&& (k<=2^(9-ld)&&l<=2^(9-ld)) %.... for lowest subband..
                     
                     s=op(tbit); tbit=tbit+1;% ... output the sig....
                     a=k; b=l+2^(9-ld);
                     if(s==1)%... if significant....
                         sp(nsp,:)= [a,b]; nsp=nsp+1; last=last+1;%...put 2k,2l in lsp...
                         btrcf(a,b)=2^N;
                         bt=op(tbit);tbit=tbit+1;  %...take sign
                         if bt==1
                             btrcf(a,b)=-btrcf(a,b);
                         end

                     else %.... if insignificant....
                         ip(nip,:)= [a,b];  nip=nip+1;%...put 2k,2l in lip...   
                     end
                     
                     
                     
                     if (tbit>totalbit)
                         break;
                     end
                     s=op(tbit); tbit=tbit+1;% ... output the sig....
                     a=k+2^(9-ld); b=l;
                     if(s==1)%... if significant....
                         sp(nsp,:)= [a,b]; nsp=nsp+1; last=last+1;%...put 2k,2l in lsp...
                         btrcf(a,b)=2^N;
                         bt=op(tbit);tbit=tbit+1;  %...take sign
                         if bt==1
                             btrcf(a,b)=-btrcf(a,b);
                         end

                     else %.... if insignificant....
                         ip(nip,:)= [a,b];  nip=nip+1;%...put 2k,2l in lip...   
                     end
                     
                     
                     
                     if (tbit>totalbit)
                         break;
                     end
                     s=op(tbit); tbit=tbit+1;% ... output the sig....
                     a=k+2^(9-ld); b=l+2^(9-ld);
                     if(s==1)%... if significant....
                         sp(nsp,:)= [a,b]; nsp=nsp+1; last=last+1;%...put 2k,2l in lsp...
                         btrcf(a,b)=2^N;
                         bt=op(tbit);tbit=tbit+1;  %...take sign
                         if bt==1
                             btrcf(a,b)=-btrcf(a,b);
                         end

                     else %.... if insignificant....
                         ip(nip,:)= [a,b];  nip=nip+1;%...put 2k,2l in lip...   
                     end
                     
                     
                 end
                 
                 
                 k=is(count,1);  l=is(count,2);
                 if(4*(k-1)+1>512 || 4*(l-1)+1>512) % if the leftover of (k,l) is empty... simply remove it from LIS
                     is(count,:)=[0,0,0];
                 else  % if leftover of (k,l) is non empty ...store it as B type.
                     x=is(count,1);y=is(count,2);
                     is(nis,:)=[x,y,2];nis=nis+1;
                     is(count,:)=[0,0,0];
                 end
             end
         end
        %                 ....... FOR ENTRY OF Type "B".....
        
        %if the entry is of type B.... that is type==2...then do following...
        k=is(count,1);  l=is(count,2); type=is(count,3);
        if((type==2)&&(k~=0 && l~=0))&& (tbit<=totalbit)
            
            %find the significance of L(k,l).......
                         
            
            
            %.......output the significance...."sig".....
            s=op(tbit); tbit=tbit+1;
            
            if(s==1)
                %... add each offspring of..(k,l)...to the end of the LIS as type A entry...
                
                if (k>2^(9-ld))||(l>2^(9-ld))  %... if (k,l) is NOT in the lowest subband.....
                    
                    k=is(count,1);l=is(count,2);
                    if(2*k-1<=512 && 2*l-1<=512)
                      is(nis,:)=[2*k-1,2*l-1,1]; nis=nis+1;
                      is(nis,:)=[2*k-1,2*l,1]; nis=nis+1;
                      is(nis,:)=[2*k,2*l-1,1]; nis=nis+1;
                      is(nis,:)=[2*k,2*l,1]; nis=nis+1;
                    end
                else     %........................ if (k,l) is in the lowest subband........                
                    if(2*k-1<=512 && 2*l-1<=512)
                        
                        is(nis,:)=[k,l+2^(9-ld),1]; nis=nis+1;
                        is(nis,:)=[k+2^(9-ld),l,1]; nis=nis+1;
                        is(nis,:)=[k+2^(9-ld),l+2^(9-ld),1]; nis=nis+1;                        
                        
                    end
                end
                
                is(count,:)=[0,0,0];        %.... remove (k,l)  .. from LIS.....
            end
        end
        count=count+1;
     end
     tok=toc;
     tis=tis+tok;
     
     %% *******************************REFINEMENT PASS**********************
     %*********************************************************************
     
     tic;
     count=1;
     while(count<(nsp-last))
              
         x=sp(count,1); y=sp(count,2);
         value=btrcf(x,y);
         bt=op(tbit); tbit=tbit+1;
         if bt==1
             if value<0
                 value= value - 2^N; 
             else
                 value= value + 2^N;
             end
             btrcf(x,y)=value;
         end
                  
         if (tbit>totalbit)
             break;
         end
         count=count+1;
     end
     tok=toc;
     tir=tir+tok;
     %*****************************QUANTIXATION STEP UPDATE**************
     %*******************************************************************
     
     
 %   fprintf('bitplane=%d    last=%d      tbit=%d \n ',N,last,tbit );
          

     
     N=N-1;

    end
    fprintf('done !\n\n'); 
    
%    btrcf=btrcf/2;
    
     
     ptin = (tin/(tin+tip+tis+tir))*100;
     ptip = (tip/(tin+tip+tis+tir))*100;
     ptis = (tis/(tin+tip+tis+tir))*100;
     ptir = (tir/(tin+tip+tis+tir))*100;
     
     ttime=tin+tip+tis+tir;
     
     fprintf('the percentage and exact time taken in diff parts of programm are as \nfollow..\n');
     fprintf('                  PERCENTAGE TIME    EXCT TIME  \n');
     fprintf('INITIALIZATION-->>    %2.2f          time:%2.2f \n', ptin,tin );
     fprintf('LIP processing-->>    %2.2f          time:%2.2f \n', ptip,tip );
     fprintf('LIS processing-->>    %2.2f          time:%2.2f \n', ptis,tis );
     fprintf('REFINEMENT PASS->>    %2.2f          time:%2.2f \n', ptir,tir );
     fprintf('----------------------------------------------\n');
     fprintf('TOTAL TIME     ---->>                time:%2.2f  \n', ttime);
     
     
end